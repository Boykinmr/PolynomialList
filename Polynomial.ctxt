#BlueJ class context
comment0.target=Polynomial
comment0.text=\r\n\ This\ class\ builds\ the\ Polynomial\ list\ out\ of\ polynomial\ Terms\ that\ it\ makes\ from\ a\ \r\n\ \ \ string\ passed\ in\ from\ the\ driver\ program.\ \ \r\n\ It\ does\ not\ use\ a\ tail\ reference\ to\ put\ the\ terms\ because\ the\ placeTerm\ method\ was\ \r\n\ \ \ implemented\ to\ serve\ double\ duty\ by\ placing\ terms\ in\ order\ regardless\ of\ the\ order\ \r\n\ \ \ received.\ \ Even\ though\ we\ can\ assume\ the\ user\ will\ type\ the\ polynomials\ correctly,\r\n\ \ \ adding\ polynomials\ together\ could\ result\ in\ terms\ of\ polynomials\ with\ different\ \r\n\ \ \ orders\ being\ added\ out\ of\ order\ if\ only\ assuming\ tail\ addition.\r\n\ It\ does\ not\ use\ doubly-linked\ Terms\ because\ I\ see\ no\ benefit\ of\ going\ from\ one\ term\ \r\n\ \ \ to\ the\ other,\ when\ algebra\ goes\ in\ order\ from\ highest\ to\ lowest\ order\ anyway.\r\n\r\n\ @author\ Michael\ R.\ Boykin\r\n\ @version\ 2017-11-13\r\n
comment1.params=stringToTerms
comment1.target=Polynomial(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Polynomial.\ \ It\ checks\ first\ if\ the\ Polynomial\ \r\n\ \ \ class\ is\ receiving\ a\ call\ from\ main,\ which\ would\ be\ signified\ by\ a\ [u],\ [f]\ or\ \r\n\ \ \ [e]\ input,\ or\ another\ Polynomial\ object\ which\ would\ be\ in\ the\ form\ of\:\r\n\ \ \ Ax^(n)\ +\ Ax^(n-1)\ +\ ...\ +\ Ax\ +\ constant.\r\n\ \ \ \r\n\ \ \ Assumes\ user\ doesn't\ enter\ polynomials\ with\ same\ exponent\ orders\ like\:\ \r\n\ \ \ \ 12x^2\ +\ 6x\ +\ 12\ +\ 13x^2.\ \ This\ should\ be\ handled\ by\ the\ add\ method\ in\ driver.\r\n\ \ \ Also,\ some\ term-orders\ may\ be\ skipped\ over,\ and\ will\ not\ be\ stored\ i.e.\:\r\n\ \ \ \ \ 25x^3\ +\ 0x^2\ +\ 6x\ +\ 12\ will\ be\ input,\ printed\ and\ stored\ as\ 25x^3\ +\ 6x\ +\ 12.\r\n\ \ \ \r\n\ @param\ \ stringToTerms\ could\ be\ a\ flag\ passed\ from\ main\ to\ the\ constructor\ or\ the\r\n\ \ \ String\ representation\ of\ a\ polynomial\ input\ from\ user\ or\ file\ with\ the\ form\ of\:\r\n\ \ \ Ax^(n)\ +\ Ax^(n-1)\ +\ ...\ Ax\ +\ constant.\r\n
comment2.params=poly1\ poly2
comment2.target=void\ addPolynomials(Polynomial,\ Polynomial)
comment2.text=\r\n\ This\ method\ adds\ up\ 2\ Polynomials\ sent\ from\ the\ calling\ class\ method,\ generates\ a\r\n\ \ \ new\ Polynomial\ object\ and\ returns\ it.\ \ It\ concatenates\ the\ toString()\ values\ of\r\n\ \ \ poly1\ &\ poly2\ and\ then\ calls\ the\ Polynomial\ constructor\ to\ make\ poly3.\r\n\ \ \ \r\n\ @param\ \ poly1,\ poly2\ \ Polynomials\ sent\ in\ to\ be\ added\ together.\r\n\ @return\ the\ Polynomial\ result\ of\ addition\ of\ poly1\ &\ poly2.\r\n
comment3.params=poly1\ xValue
comment3.target=void\ evaluatePolynomials(Polynomial,\ int)
comment3.text=\r\n\ This\ method\ evaluates\ a\ Polynomial\ by\ substituting\ the\ xValue\ for\ x.\ \ This\ method\r\n\ \ \ uses\ loops\ to\ simulate\ the\ power\ function,\ keeping\ the\ result\ an\ integer.\r\n\ \ \r\n\ \ @param\ \ poly1\ \ Polynomial\ sent\ in\ to\ be\ evaluated.\r\n\ \ @param\ \ xValue\ int\ sent\ in\ to\ be\ substituted\ for\ every\ term's\ x\ variable.\r\n\ \ @return\ None.\r\n
comment4.params=
comment4.target=void\ getFileInput()
comment4.text=\r\n\ This\ method\ solicites\ a\ file\ name\ from\ the\ user\ and\ then\ opens\ it\ for\ reading.\ \ \r\n\ \ \ It\ then\ performs\ functions\ as\ specified\ in\ the\ specs.\r\n\ \ \ \r\n\ @param\ \ None.\r\n\ @return\ None.\r\n
comment5.params=
comment5.target=void\ getUserInput()
comment5.text=\r\n\ This\ method\ solicites\ a\ input\ from\ the\ user\ with\ regards\ to\ the\ functions\ as\ \r\n\ \ \ performed\ and\ polynomials\ entered\ as\ specified\ in\ the\ specs.\r\n\ \ \ \r\n\ @param\ \ None.\r\n\ @return\ None.\r\n
comment6.params=newTerm
comment6.target=void\ placeTerm(Term)
comment6.text=\r\n\ This\ method\ inserts\ new\ terms\ to\ the\ linked\ list\ in\ exponent\ order.\ \ It\ pulls\ \r\n\ \ \ extra\ duty\ by\ adding\ the\ terms\ if\ the\ list\ exists\ as\ called\ from\ \r\n\ \ \ addPolynomials\ method.\ \ Coincidentally,\ it\ will\ combine\ like\ terms\ if\ typed\ in\r\n\ \ \ one\ or\ two\ polynomials.\r\n\r\n\ @param\ \ newTerm\ \ the\ term\ that\ is\ to\ be\ placed\ in\ the\ list.\r\n\ @return\ None.\r\n
comment7.params=
comment7.target=java.lang.String\ reportData()
comment7.text=\r\n\ This\ method\ is\ called\ from\ main\ to\ get\ the\ Polynomial's\ report\ data\ for\ writing\ \r\n\ \ \ the\ final\ report\ file.\r\n\ \r\n\ @param\ \ None.\r\n\ @return\ String\ report\ data\ saved\ in\ the\ Polynomial\ for\ writing.\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ This\ method\ converts\ the\ Polynomial\ object\ to\ a\ text\ expression\ by\ calling\ the\ \r\n\ \ \ overridden\ toString()\ methods\ so\ the\ object's\ text\ expression\ can\ be\ printed.\r\n\r\n\ @param\ \ None.\r\n\ @return\ the\ string\ representation\ of\ this\ term.\r\n\ @overrides\ toString()\r\n
numComments=9
